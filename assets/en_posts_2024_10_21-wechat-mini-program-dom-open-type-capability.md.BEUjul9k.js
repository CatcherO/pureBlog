import{_ as i,c as a,o as t,ar as n}from"./chunks/framework.Dw9xXWbv.js";const r=JSON.parse('{"title":"微信小程序为DOM无缝增加open-type开放能力","description":"","frontmatter":{"title":"微信小程序为DOM无缝增加open-type开放能力","date":"2024-10-21T00:00:00.000Z","tags":["微信小程序","Vue Mini","开放能力","CSS","事件处理"]},"headers":[],"relativePath":"en/posts/2024/10/21-wechat-mini-program-dom-open-type-capability.md","filePath":"en/posts/2024/10/21-wechat-mini-program-dom-open-type-capability.md","lastUpdated":1742015773000}'),e={name:"en/posts/2024/10/21-wechat-mini-program-dom-open-type-capability.md"};function l(p,s,h,k,d,o){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="微信小程序为dom无缝增加open-type开放能力" tabindex="-1">微信小程序为DOM无缝增加open-type开放能力 <a class="header-anchor" href="#微信小程序为dom无缝增加open-type开放能力" aria-label="Permalink to &quot;微信小程序为DOM无缝增加open-type开放能力&quot;">​</a></h1><blockquote><p>✨文章摘要（AI生成）</p></blockquote><p>在这篇文章中，笔者分享了在开发微信小程序时，如何通过CSS技巧实现<code>button</code>和<code>cell</code>组件的协同工作。由于微信小程序出于安全考虑，无法通过JS模拟点击，因此必须在界面上使用<code>button</code>组件来调用开放能力，比如打开意见反馈页面。为了解决样式统一的问题，笔者将<code>button</code>嵌套在<code>cell</code>中，并通过CSS隐藏<code>button</code>的默认样式。</p><p>然而，这样的做法导致<code>cell</code>的点击反馈消失，因为事件被<code>button</code>捕获。经过分析，笔者借助<code>pointer-events</code>属性，使得<code>button</code>不捕获鼠标事件，而其内部的<code>cell</code>组件可以正常响应点击。最终，笔者成功实现了既能打开反馈页面，又保留了<code>cell</code>的点击反馈效果的功能。这种方法有效地结合了样式与功能，为开发者提供了实用的解决方案。</p><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>最近在尝试 Vue Mini 这个框架，来开发一个小程序，祝我成功（因为半途而废的项目真的太多太多了）</p><p>期间遇到一个场景，就是需要用户点击<code>cell</code>单元格组件时调用微信小程序提供的开放能力。比如，点击<code>cell</code>时打开意见反馈的页面。</p><h2 id="遇到的问题-必须存在的button" tabindex="-1">遇到的问题 - 必须存在的Button <a class="header-anchor" href="#遇到的问题-必须存在的button" aria-label="Permalink to &quot;遇到的问题 - 必须存在的Button&quot;">​</a></h2><p>首先，微信小程序为了安全起见，是不支持JS模拟点击的操作的，即我是无法通过JS来打开意见反馈的功能。这也很好理解，因为比如用户手机号、头像等隐私信息如果可以通过JS来获取，那么你只要一登录该小程序，你的信息就被拿完了，而你却浑然不知。</p><p>所以，页面上是必须存在<code>button</code>组件的，这里简单解释一下，微信小程序提供的能力都是放在<code>button</code>组件上的，比如刚才的意见反馈页面的打开，就只需要在<code>button</code>组件上加上<code>open-type=&quot;feedback&quot;</code>即可，更多开放能力可以参考<a href="https://developers.weixin.qq.com/miniprogram/dev/component/button.html" target="_blank" rel="noreferrer">微信小程序官方文档</a></p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020241021152722.png" alt=""></p><p>但是为了页面统一，笔者这里是使用的<code>cell</code>，而这里又需要<code>button</code>，有没有办法让其共存呢，即样式展示的<code>cell</code>，而点击效果是触发的<code>button</code>。当然有，这里是本文接下来要讲到的。</p><h2 id="解决问题-css隐藏button" tabindex="-1">解决问题 - CSS隐藏Button <a class="header-anchor" href="#解决问题-css隐藏button" aria-label="Permalink to &quot;解决问题 - CSS隐藏Button&quot;">​</a></h2><p>既然提到样式，很容易的想到使用CSS来解决，我们先找个位置放上这个<code>button</code>，这里笔者使用<code>button</code>套用<code>cell</code>组件，像下面这样：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> open-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;feedback&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">t-cell</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;意见反馈&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> leftIcon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chat-message&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hover</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> arrow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>此时页面的效果如下：</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020241021154639.png" alt=""></p><p>可以看到携带了一些<code>button</code>组件的自带样式，比如左右<code>padding</code>，<code>border</code>之类的，这里我们去除<code>button</code>自带的默认样式：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-style-btn&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> open-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;feedback&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">t-cell</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;意见反馈&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> leftIcon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chat-message&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hover</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> arrow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.no-style-btn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.no-style-btn::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这是现在的效果：</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020241021160054.png" alt=""></p><h2 id="新的问题-消失的cell点击反馈" tabindex="-1">新的问题 - 消失的Cell点击反馈 <a class="header-anchor" href="#新的问题-消失的cell点击反馈" aria-label="Permalink to &quot;新的问题 - 消失的Cell点击反馈&quot;">​</a></h2><p>也支持点击跳转到意见反馈的页面了，看着没效果，但是稍微注意一下就会发现此时点击<code>cell</code>组件的点击反馈消失了，之前是会有这个置灰效果的（这里用上面的<code>cell</code>点击做演示）：</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020241021160242.png" alt=""></p><h2 id="分析问题-事件未传递给cell" tabindex="-1">分析问题 - 事件未传递给Cell <a class="header-anchor" href="#分析问题-事件未传递给cell" aria-label="Permalink to &quot;分析问题 - 事件未传递给Cell&quot;">​</a></h2><p>通过绑定<code>button</code>和<code>cell</code>组件打印日志：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-style-btn&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> open-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;feedback&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bind:tap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;handleBtnTap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">t-cell</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;意见反馈&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> leftIcon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chat-message&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hover</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> arrow</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bind:tap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;handleCellTap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>我们可以清楚的看到我们在点击意见反馈时，<code>handleCellTap</code>根本没有触发，这也很好理解，事件被父元素的button给捕获了，自然不会传递给下面的子组件<code>cell</code>。</p><h2 id="解决问题-pointer-events自定义事件触发" tabindex="-1">解决问题 - <code>pointer-events</code>自定义事件触发 <a class="header-anchor" href="#解决问题-pointer-events自定义事件触发" aria-label="Permalink to &quot;解决问题 - \`pointer-events\`自定义事件触发&quot;">​</a></h2><p>这里笔者稍微问了一个Claude，它给出了<code>pointer-events</code>方法来解决，简单来说，就是让<code>button</code>不进行事件捕获，让<code>cell</code>来捕获事件，然后通过事件冒泡的机制，自动向上传递。</p><p>最终其实就这三句代码：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.no-style-btn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  pointer-events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 让按钮不捕获鼠标事件 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.no-style-btn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  pointer-events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 让按钮内的元素捕获鼠标事件 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.no-style-btn::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>此时我们的意见反馈<code>cell</code>也有了对应的点击反馈，同时也能触发 open-type 的开放能力了：</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020241021161142.png" alt=""></p>`,35)]))}const c=i(e,[["render",l]]);export{r as __pageData,c as default};
