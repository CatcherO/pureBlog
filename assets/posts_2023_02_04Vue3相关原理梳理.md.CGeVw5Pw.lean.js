import{_ as t,c as h,o as l,ar as n,j as i,a}from"./chunks/framework.Dw9xXWbv.js";const u=JSON.parse('{"title":"一文梳理 Vue3 核心原理","description":"","frontmatter":{"title":"一文梳理 Vue3 核心原理","date":"2023-02-04T00:00:00.000Z","tags":["Vue3","前端","虚拟 DOM","响应式","Diff 算法","编译优化","依赖收集"]},"headers":[],"relativePath":"posts/2023/02/04Vue3相关原理梳理.md","filePath":"posts/2023/02/04Vue3相关原理梳理.md","lastUpdated":1742015773000}'),k={name:"posts/2023/02/04Vue3相关原理梳理.md"},p={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},e={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.832ex",height:"2.452ex",role:"img",focusable:"false",viewBox:"0 -833.9 2577.6 1083.9","aria-hidden":"true"},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000","aria-hidden":"true"};function d(g,s,o,y,F,c){return l(),h("div",null,[s[17]||(s[17]=n("",112)),i("p",null,[s[2]||(s[2]=a("值得注意的是：同样这里也是通过遍历这两个数组来填充")),s[3]||(s[3]=i("code",null,"newIndexToOldIndexMap",-1)),s[4]||(s[4]=a("，即暴力解法的算法复杂度为: ")),i("mjx-container",p,[(l(),h("svg",e,s[0]||(s[0]=[n("",1)]))),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"O"),i("mo",{stretchy:"false"},"("),i("msup",null,[i("mi",null,"n"),i("mn",null,"2")]),i("mo",{stretchy:"false"},")")])],-1))]),s[5]||(s[5]=a(" 所以为了优化这里利用了")),s[6]||(s[6]=i("strong",null,"空间换时间",-1)),s[7]||(s[7]=a("思想。使用")),s[8]||(s[8]=i("code",null,"keyToNewIndexMap",-1)),s[9]||(s[9]=a("先存储了新节点数组的关键信息："))]),s[18]||(s[18]=n("",1)),i("p",null,[s[12]||(s[12]=a("之后在遍历旧结点数组时，就可以在")),s[13]||(s[13]=i("code",null,"O(1)",-1)),s[14]||(s[14]=a("的复杂度通过旧结点的 key 直接获取新结点的位置，而非每次都在内部嵌套循环遍历新结点数组去重新获取对应新节点位置，最终构造")),s[15]||(s[15]=i("code",null,"newIndexToOldIndexMap",-1)),s[16]||(s[16]=a("的算法复杂度降到了 ")),i("mjx-container",r,[(l(),h("svg",E,s[10]||(s[10]=[n("",1)]))),s[11]||(s[11]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"O"),i("mo",{stretchy:"false"},"("),i("mi",null,"n"),i("mo",{stretchy:"false"},")")])],-1))])]),s[19]||(s[19]=n("",65))])}const B=t(k,[["render",d]]);export{u as __pageData,B as default};
